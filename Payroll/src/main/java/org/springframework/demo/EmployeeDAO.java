package org.springframework.demo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.ApplicationEventPublisher;import org.springframework.context.ApplicationEventPublisherAware;import org.springframework.demo.Employees.Commission;import org.springframework.demo.Employees.Employee;import org.springframework.demo.Employees.Hourly;import org.springframework.demo.Employees.SalariedCommission;import org.springframework.demo.salaryChange.SalaryChangeEvent;public class EmployeeDAO implements ApplicationEventPublisherAware {    private ApplicationEventPublisher eventPublisher;    private DBase dbConnection;    @Autowired    public EmployeeDAO(DBase dbConnection) {        this.dbConnection = dbConnection;    }    public void updateSalary(Employee employee, Double oldSalary) {        String tableName;        String sqlBonus = "";        if (employee instanceof SalariedCommission) {            tableName = "salaried_commission_employees";        } else if (employee instanceof Hourly) {            tableName = "hourly_employees";            sqlBonus = ", `salary-hour` = " + ((Hourly) employee).getSalaryHour();        } else if (employee instanceof Commission) {            tableName = "commission_employees";        } else {            tableName = "salaried_employees";        }        String sql = "UPDATE " + tableName + " SET salary = " + employee.getSalary() + sqlBonus + " WHERE id = " + employee.getId();        dbConnection.updateData(sql);        System.out.println(sql);        this.eventPublisher.publishEvent(new SalaryChangeEvent(this, employee, oldSalary));    }    @Override    public void setApplicationEventPublisher(ApplicationEventPublisher applicationEventPublisher) {        this.eventPublisher = applicationEventPublisher;    }}